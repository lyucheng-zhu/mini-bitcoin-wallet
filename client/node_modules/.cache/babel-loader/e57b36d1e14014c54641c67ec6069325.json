{"ast":null,"code":"/* All redux actions.\r\n   I am using the thunk middlewire to make async action dispatches */\nimport axios from 'axios';\n\nvar _require = require('../store'),\n    history = _require.history;\n\nvar bitcoin = require(\"bitcoinjs-lib\");\n\nvar buffer = require('buffer');\n\nvar API_URL = \"http://localhost:5000/api\";\nvar BLOCKCRYPHER_URL = \"https://api.blockcypher.com/v1/btc/test3\"; // Save the search contents for navigation\n\nexport function searchContentsChange(searchInput) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SEARCH_Contents_CHANGE',\n      searchContents: searchInput\n    });\n  };\n} // Get the details of a wallet address\n\nexport function searchAddress(address) {\n  console.log('Searching an address');\n  return function (dispatch) {\n    console.log(\"\".concat(BLOCKCRYPHER_URL, \"/addrs/\") + address);\n    axios.get(\"\".concat(BLOCKCRYPHER_URL, \"/addrs/\") + address).then(function (res) {\n      console.log(res);\n      var addressDetail = res.data;\n      dispatch({\n        type: 'LOAD_ADDRESS_DETAIL',\n        addressDetail: addressDetail\n      });\n      history.push('/address');\n    }).catch(function (err) {\n      alert(err);\n      console.log(err);\n    });\n  };\n} // Get the details of a transaction based on its hash\n\nexport function searchTransaction(transaction) {\n  return function (dispatch) {\n    console.log('Searching a transaction'); //console.log(`${BLOCKCRYPHER_URL}/txs/` + transaction);\n\n    axios.get(\"\".concat(BLOCKCRYPHER_URL, \"/txs/\") + transaction).then(function (res) {\n      console.log(res);\n      var transactionDetail = res.data;\n      dispatch({\n        type: 'LOAD_TRANSACTION_DETAIL',\n        transactionDetail: transactionDetail\n      });\n      history.push('/transaction');\n    }).catch(function (err) {\n      alert(err);\n      console.log(err);\n    });\n  };\n} // Make a payment using BlockCrypher API\n\nexport function pay(payment) {\n  return function (dispatch) {\n    console.log('Creating a transaction');\n    console.log(payment);\n    var key = bitcoin.ECPair.fromWIF(payment.payerPrivateKeyInput, bitcoin.networks.testnet); // 1. Post our simple transaction information to get back the fully built transaction,\n    //    includes fees when required.\n\n    function newTransaction() {\n      var newtx = {\n        \"inputs\": [{\n          \"addresses\": [payment.payerAddressInput]\n        }],\n        \"outputs\": [{\n          \"addresses\": [payment.payeeAddressInput],\n          \"value\": parseInt(payment.payingAmountInput)\n        }]\n      };\n      console.log(newtx);\n      return axios.post(BLOCKCRYPHER_URL + '/txs/new', JSON.stringify(newtx));\n    } // 2. Sign the hexadecimal strings returned with the fully built transaction and include\n    //    the source public address.\n\n\n    function signAndSend(newtx) {\n      newtx = newtx.data;\n      if (checkError(newtx)) return;\n      newtx.pubkeys = [];\n      newtx.signatures = newtx.tosign.map(function (tosign) {\n        newtx.pubkeys.push(payment.payerPublicKeyInput);\n        var signWithHashType = bitcoin.script.signature.encode(key.sign(new buffer.Buffer(tosign, \"hex\")), bitcoin.Transaction.SIGHASH_NONE).toString(\"hex\");\n        console.log(signWithHashType);\n        return signWithHashType.substring(0, signWithHashType.length - 2);\n      });\n      return axios.post(BLOCKCRYPHER_URL + \"/txs/send\", JSON.stringify(newtx)).catch(function (error) {\n        return console.log(error.response.data.errors);\n      });\n    } // 3. Open a websocket to wait for confirmation the transaction has been accepted in a block.\n\n\n    function waitForConfirmation(finaltx) {\n      console.log(finaltx);\n      finaltx = finaltx.data;\n      if (checkError(finaltx)) return;\n      alert(\"Transaction \" + finaltx.tx.hash + \" to \" + payment.payeeAddressInput + \" of \" + finaltx.tx.outputs[0].value / 100000000 + \" BTC sent.\");\n      alert(\"Waiting for confirmation... (may take > 10 min)\");\n      return finaltx.tx.hash;\n    }\n\n    function checkError(msg) {\n      if (msg.errors && msg.errors.length) {\n        console.log(\"Errors occured!!/n\" + msg.errors.join(\"/n\"));\n        return true;\n      }\n    }\n\n    newTransaction().then(signAndSend).catch(function (error) {\n      return console.log(error);\n    }).then(waitForConfirmation).catch(function (error) {\n      return console.log(error);\n    }).then(function (transaction) {\n      axios.get(\"\".concat(BLOCKCRYPHER_URL, \"/txs/\") + transaction).then(function (res) {\n        console.log(res);\n        var transactionDetail = res.data;\n        dispatch({\n          type: 'LOAD_TRANSACTION_DETAIL',\n          transactionDetail: transactionDetail\n        });\n        history.push('/transaction');\n      }).catch(function (err) {\n        alert(err);\n        console.log(err);\n      });\n    });\n  };\n} // Sign in\n\nexport function login(username, password) {\n  return function (dispatch) {\n    console.log('Loging in...');\n    axios({\n      url: API_URL + \"/user/login\",\n      method: \"post\",\n      data: JSON.stringify({\n        user: {\n          \"username\": username,\n          \"password\": password\n        }\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      var user = res.data.user;\n\n      if (!user) {\n        alert(\"Sorry, your username and/or password are wrong! Please check again.\");\n      } else {\n        console.log(user);\n        localStorage.setItem(\"auth\", JSON.stringify(user));\n        dispatch({\n          type: 'LOG_IN',\n          user: user\n        });\n      }\n    }).catch(function (err) {\n      alert(err);\n      console.log(err);\n    });\n  };\n} // Sign up\n\nexport function signup(username, password) {\n  return function (dispatch) {\n    console.log('Signing up...');\n    axios({\n      url: API_URL + \"/user/signup\",\n      method: \"post\",\n      data: JSON.stringify({\n        user: {\n          \"username\": username,\n          \"password\": password\n        }\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      var user = res.data.user;\n\n      if (!user) {\n        alert(\"Sorry, your username and/or password are wrong! Please check again.\");\n      } else {\n        localStorage.setItem(\"auth\", JSON.stringify(user));\n        dispatch({\n          type: 'LOG_IN',\n          user: user\n        });\n        history.push('/');\n      }\n    }).catch(function (err) {\n      alert(err);\n      console.log(err);\n    });\n  };\n} // Log out\n\nexport function logout() {\n  return function (dispatch) {\n    console.log('Loging out...');\n    dispatch({\n      type: 'LOG_OUT'\n    });\n    history.push('/');\n  };\n} // Choose a saved wallet as payer\n\nexport function choosePayer(index) {\n  console.log(\"Choosing wallet \" + index + \"as payer...\");\n  return function (dispatch) {\n    dispatch({\n      type: 'CHOOSE_PAYER',\n      index: index\n    });\n    history.push('/pay');\n  };\n} // Delete a saved wallet\n\nexport function deleteWallet(token, walletId) {\n  return function (dispatch) {\n    console.log(\"Deleting wallet \" + walletId + \"...\");\n    axios({\n      url: API_URL + \"/wallet/\" + walletId,\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(function (res) {\n      var error = res.data.err;\n\n      if (!!error) {\n        alert(error);\n        console.log(error);\n      } else {\n        dispatch({\n          type: 'DELETE_WALLET',\n          walletId: walletId\n        }); //history.push('/wallet');\n      }\n    }).catch(function (err) {\n      alert(err);\n      console.log(err);\n    });\n  };\n} // Add a saved wallet\n\nexport function addWallet(token, wallet) {\n  return function (dispatch) {\n    console.log(\"Adding a wallet...\");\n    axios({\n      url: API_URL + \"/wallet\",\n      method: \"post\",\n      data: JSON.stringify({\n        wallet: wallet\n      }),\n      headers: {\n        Authorization: \"Bearer \" + token,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      var error = res.data.err;\n\n      if (!!error) {\n        alert(error);\n        console.log(error);\n      } else {\n        var _wallet = res.data.wallet;\n        dispatch({\n          type: 'ADD_WALLET',\n          wallet: _wallet\n        }); //history.push('/wallet');\n      }\n    }).catch(function (err) {\n      alert(err);\n      console.log(err);\n    });\n  };\n} // Back to main page\n\nexport function backToIndex() {\n  return function (dispatch) {\n    history.push(\"/\");\n  };\n} // Signin modal close\n\nexport function toggleCloseSignin() {\n  return function (dispatch) {\n    dispatch({\n      type: 'TOGGLE_MODAL_SIGNIN',\n      modalModeSignin: false\n    });\n  };\n} // Signin modal open\n\nexport function toggleOpenSignin() {\n  return function (dispatch) {\n    dispatch({\n      type: 'TOGGLE_MODAL_SIGNIN',\n      modalModeSignin: true\n    });\n  };\n} // Signup modal close\n\nexport function toggleCloseSignup() {\n  return function (dispatch) {\n    dispatch({\n      type: 'TOGGLE_MODAL_SIGNUP',\n      modalModeSignup: false\n    });\n  };\n} // Signup modal open\n\nexport function toggleOpenSignup() {\n  return function (dispatch) {\n    dispatch({\n      type: 'TOGGLE_MODAL_SIGNUP',\n      modalModeSignup: true\n    });\n  };\n}","map":{"version":3,"sources":["D:\\Projects\\others\\mini-bitcoin-wallet\\client\\src\\redux\\actions\\actions.js"],"names":["axios","require","history","bitcoin","buffer","API_URL","BLOCKCRYPHER_URL","searchContentsChange","searchInput","dispatch","type","searchContents","searchAddress","address","console","log","get","then","res","addressDetail","data","push","catch","err","alert","searchTransaction","transaction","transactionDetail","pay","payment","key","ECPair","fromWIF","payerPrivateKeyInput","networks","testnet","newTransaction","newtx","payerAddressInput","payeeAddressInput","parseInt","payingAmountInput","post","JSON","stringify","signAndSend","checkError","pubkeys","signatures","tosign","map","payerPublicKeyInput","signWithHashType","script","signature","encode","sign","Buffer","Transaction","SIGHASH_NONE","toString","substring","length","error","response","errors","waitForConfirmation","finaltx","tx","hash","outputs","value","msg","join","login","username","password","url","method","user","headers","Accept","localStorage","setItem","signup","logout","choosePayer","index","deleteWallet","token","walletId","Authorization","addWallet","wallet","_wallet","backToIndex","toggleCloseSignin","modalModeSignin","toggleOpenSignin","toggleCloseSignup","modalModeSignup","toggleOpenSignup"],"mappings":"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","sourcesContent":["/* All redux actions.\r\n   I am using the thunk middlewire to make async action dispatches */\r\n\r\nimport axios from 'axios';\r\nconst { history } = require('../store');\r\nconst bitcoin = require(\"bitcoinjs-lib\");\r\nconst buffer  = require('buffer');\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\nconst BLOCKCRYPHER_URL = \"https://api.blockcypher.com/v1/btc/test3\";\r\n\r\n// Save the search contents for navigation\r\nexport function searchContentsChange(searchInput) {\r\n    return (dispatch) => {\r\n        dispatch({type: 'SEARCH_Contents_CHANGE', searchContents: searchInput})\r\n    }\r\n}\r\n\r\n// Get the details of a wallet address\r\nexport function searchAddress(address){\r\n  console.log('Searching an address');\r\n  return (dispatch) => {\r\n    console.log(`${BLOCKCRYPHER_URL}/addrs/` + address);\r\n    axios.get(`${BLOCKCRYPHER_URL}/addrs/` + address)\r\n    .then((res) => {\r\n      console.log(res);\r\n      let addressDetail = res.data;\r\n      dispatch({type:'LOAD_ADDRESS_DETAIL', addressDetail: addressDetail});\r\n      history.push('/address');\r\n    }).catch((err) => {\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n\r\n// Get the details of a transaction based on its hash\r\nexport function searchTransaction(transaction){\r\n  return (dispatch) => {\r\n    console.log('Searching a transaction');\r\n    //console.log(`${BLOCKCRYPHER_URL}/txs/` + transaction);\r\n    axios.get(`${BLOCKCRYPHER_URL}/txs/` + transaction)\r\n    .then((res) => {\r\n      console.log(res);\r\n      let transactionDetail = res.data;\r\n      dispatch({type:'LOAD_TRANSACTION_DETAIL', transactionDetail: transactionDetail});\r\n      history.push('/transaction');\r\n    }).catch((err) => {\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n\r\n// Make a payment using BlockCrypher API\r\nexport function pay(payment){\r\n  return (dispatch) => {\r\n    console.log('Creating a transaction');\r\n    console.log(payment);\r\n    let key   = bitcoin.ECPair.fromWIF(payment.payerPrivateKeyInput, bitcoin.networks.testnet);\r\n\r\n    // 1. Post our simple transaction information to get back the fully built transaction,\r\n    //    includes fees when required.\r\n    function newTransaction() {\r\n      let newtx = {\r\n        \"inputs\": [{\"addresses\": [payment.payerAddressInput]}],\r\n        \"outputs\": [{\"addresses\": [payment.payeeAddressInput], \"value\": parseInt(payment.payingAmountInput)}],\r\n      }\r\n      console.log(newtx);\r\n      return axios.post(BLOCKCRYPHER_URL + '/txs/new', JSON.stringify(newtx));\r\n    }\r\n\r\n    // 2. Sign the hexadecimal strings returned with the fully built transaction and include\r\n    //    the source public address.\r\n    function signAndSend(newtx) {\r\n    \tnewtx = newtx.data;\r\n      if (checkError(newtx)) return;\r\n      newtx.pubkeys     = [];\r\n      newtx.signatures  = newtx.tosign.map(function(tosign) {\r\n        newtx.pubkeys.push(payment.payerPublicKeyInput);\r\n        let signWithHashType = bitcoin.script.signature.encode(key.sign(new buffer.Buffer(tosign, \"hex\")),  bitcoin.Transaction.SIGHASH_NONE).toString(\"hex\");\r\n        console.log(signWithHashType);\r\n        return signWithHashType.substring(0, signWithHashType.length - 2);\r\n      });\r\n      return axios.post(BLOCKCRYPHER_URL + \"/txs/send\", JSON.stringify(newtx)).catch(error => console.log(error.response.data.errors));\r\n    }\r\n\r\n    // 3. Open a websocket to wait for confirmation the transaction has been accepted in a block.\r\n    function waitForConfirmation(finaltx) {\r\n      console.log(finaltx);\r\n      finaltx = finaltx.data;\r\n      if (checkError(finaltx)) return;\r\n      alert(\"Transaction \" + finaltx.tx.hash + \" to \" + payment.payeeAddressInput + \" of \" +\r\n            finaltx.tx.outputs[0].value/100000000 + \" BTC sent.\");\r\n      alert(\"Waiting for confirmation... (may take > 10 min)\");\r\n      return finaltx.tx.hash;\r\n    }\r\n\r\n    function checkError(msg) {\r\n      if (msg.errors && msg.errors.length) {\r\n        console.log(\"Errors occured!!/n\" + msg.errors.join(\"/n\"));\r\n        return true;\r\n      }\r\n    }\r\n\r\n    newTransaction()\r\n    .then(signAndSend).catch(error => console.log(error))\r\n    .then(waitForConfirmation).catch(error => console.log(error))\r\n    .then((transaction) => {\r\n      axios.get(`${BLOCKCRYPHER_URL}/txs/` + transaction)\r\n      .then((res) => {\r\n        console.log(res);\r\n        let transactionDetail = res.data;\r\n        dispatch({type:'LOAD_TRANSACTION_DETAIL', transactionDetail: transactionDetail});\r\n        history.push('/transaction');\r\n      }).catch((err) => {\r\n        alert(err);\r\n        console.log(err);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// Sign in\r\nexport function login(username, password){\r\n  return (dispatch) => {\r\n    console.log('Loging in...');\r\n    axios({\r\n      url: API_URL + \"/user/login\",\r\n      method: \"post\",\r\n      data: JSON.stringify({\r\n        user:{\r\n          \"username\" : username,\r\n          \"password\" : password\r\n        }\r\n      }),\r\n      headers : {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then((res) => {\r\n      let user = res.data.user;\r\n      if (!user) {\r\n        alert(\"Sorry, your username and/or password are wrong! Please check again.\");\r\n      } else {\r\n        console.log(user);\r\n        localStorage.setItem(\"auth\", JSON.stringify(user));\r\n        dispatch({type: 'LOG_IN', user: user});\r\n      }\r\n    }).catch((err)=>{\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n\r\n// Sign up\r\nexport function signup(username, password){\r\n  return (dispatch) => {\r\n    console.log('Signing up...');\r\n    axios({\r\n      url: API_URL + \"/user/signup\",\r\n      method: \"post\",\r\n      data: JSON.stringify({\r\n        user:{\r\n          \"username\" : username,\r\n          \"password\" : password\r\n        }\r\n      }),\r\n      headers : {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then((res) => {\r\n      let user = res.data.user;\r\n      if (!user) {\r\n        alert(\"Sorry, your username and/or password are wrong! Please check again.\");\r\n      } else {\r\n        localStorage.setItem(\"auth\", JSON.stringify(user));\r\n        dispatch({type: 'LOG_IN', user});\r\n        history.push('/');\r\n      }\r\n    }).catch((err)=>{\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n\r\n// Log out\r\nexport function logout(){\r\n  return (dispatch) => {\r\n    console.log('Loging out...');\r\n    dispatch({type: 'LOG_OUT'});\r\n    history.push('/');\r\n  }\r\n}\r\n\r\n// Choose a saved wallet as payer\r\nexport function choosePayer(index){\r\n  console.log(\"Choosing wallet \" + index + \"as payer...\");\r\n  return (dispatch) => {\r\n    dispatch({type: 'CHOOSE_PAYER', index: index});\r\n    history.push('/pay');\r\n  }\r\n}\r\n\r\n// Delete a saved wallet\r\nexport function deleteWallet(token, walletId){\r\n  return (dispatch) => {\r\n    console.log(\"Deleting wallet \" + walletId + \"...\");\r\n    axios({\r\n      url: API_URL + \"/wallet/\" + walletId,\r\n      method: \"delete\",\r\n      headers: {Authorization: \"Bearer \" + token}\r\n    }).then((res) => {\r\n      let error = res.data.err;\r\n      if (!!error) {\r\n        alert(error);\r\n        console.log(error);\r\n      } else {\r\n        dispatch({type: 'DELETE_WALLET', walletId: walletId});\r\n        //history.push('/wallet');\r\n      }\r\n    }).catch((err)=>{\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n\r\n// Add a saved wallet\r\nexport function addWallet(token, wallet){\r\n  return (dispatch) => {\r\n    console.log(\"Adding a wallet...\");\r\n    axios({\r\n      url: API_URL + \"/wallet\",\r\n      method: \"post\",\r\n      data: JSON.stringify({\r\n        wallet: wallet\r\n      }),\r\n      headers : {\r\n        Authorization: \"Bearer \" + token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then((res) => {\r\n      let error = res.data.err;\r\n      if (!!error) {\r\n        alert(error);\r\n        console.log(error);\r\n      } else {\r\n        let _wallet = res.data.wallet;\r\n        dispatch({type: 'ADD_WALLET', wallet: _wallet});\r\n        //history.push('/wallet');\r\n      }\r\n    }).catch((err)=>{\r\n      alert(err);\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n\r\n// Back to main page\r\nexport function backToIndex() {\r\n    return (dispatch) => {\r\n        history.push(\"/\");\r\n    }\r\n}\r\n\r\n// Signin modal close\r\nexport function toggleCloseSignin() {\r\n    return (dispatch) => {\r\n        dispatch({type: 'TOGGLE_MODAL_SIGNIN', modalModeSignin: false})\r\n    }\r\n}\r\n\r\n// Signin modal open\r\nexport function toggleOpenSignin() {\r\n    return (dispatch) => {\r\n        dispatch({type: 'TOGGLE_MODAL_SIGNIN', modalModeSignin: true})\r\n    }\r\n}\r\n\r\n// Signup modal close\r\nexport function toggleCloseSignup() {\r\n    return (dispatch) => {\r\n        dispatch({type: 'TOGGLE_MODAL_SIGNUP', modalModeSignup: false})\r\n    }\r\n}\r\n\r\n// Signup modal open\r\nexport function toggleOpenSignup() {\r\n    return (dispatch) => {\r\n        dispatch({type: 'TOGGLE_MODAL_SIGNUP', modalModeSignup: true})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}