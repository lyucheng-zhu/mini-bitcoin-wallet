{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\src\\\\components\\\\Search.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Button, Form, Row, Col, Image } from 'react-bootstrap';\nimport bitcoinLogo from \"../assets/img/bitcoin-logo.png\";\nimport { searchAddress, searchTransaction } from './../redux/actions/actions';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n    _this.searchInput = React.createRef();\n    _this.searchInputType = React.createRef();\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n      if (_this.searchInputType.current.value === \"address\") _this.props.searchAddress(_this.searchInput.current.value);else _this.props.searchTransaction(_this.searchInput.current.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Image, {\n        src: bitcoinLogo,\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(Form, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formSearchContents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Form.Control, {\n        type: \"text\",\n        ref: this.searchInput,\n        placeholder: \"Enter an wallet address or a transaction hash\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formSearchType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Form.Control, {\n        as: \"select\",\n        ref: this.searchInputType,\n        defaultValue: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Address \"), React.createElement(\"option\", {\n        value: \"transaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" Transaction \")))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Search\")));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchContents: state.searchContents\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchAddress: searchAddress,\n  searchTransaction: searchTransaction\n})(Search);","map":{"version":3,"sources":["D:\\Projects\\playground\\playground-bitcoin-blockcrypher\\client\\src\\components\\Search.js"],"names":["React","Component","connect","Container","Button","Form","Row","Col","Image","bitcoinLogo","searchAddress","searchTransaction","Search","props","searchInput","createRef","searchInputType","handleClick","e","preventDefault","current","value","mapStateToProps","state","searchContents"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Button, Form, Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport bitcoinLogo from \"../assets/img/bitcoin-logo.png\";\r\n\r\nimport {\r\n  searchAddress,\r\n  searchTransaction\r\n} from './../redux/actions/actions';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchInput = React.createRef();\r\n    this.searchInputType = React.createRef();\r\n    this.handleClick = (e) => {\r\n      e.preventDefault();\r\n      if (this.searchInputType.current.value === \"address\")\r\n        this.props.searchAddress(this.searchInput.current.value);\r\n      else\r\n        this.props.searchTransaction(this.searchInput.current.value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <Container className=\"justify-content-md-center\">\r\n      <Row className=\"justify-content-md-center\">\r\n        <br/>\r\n        <Image src={bitcoinLogo} fluid />\r\n        <br/>\r\n      </Row>\r\n      <Form className=\"justify-content-md-center\">\r\n        <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formSearchContents\">\r\n          <Form.Label></Form.Label>\r\n          <Form.Control type=\"text\" ref={this.searchInput} placeholder=\"Enter an wallet address or a transaction hash\" required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formSearchType\">\r\n          <Form.Label></Form.Label>\r\n          <Form.Control as={\"select\"} ref={this.searchInputType} defaultValue=\"address\">\r\n            <option value=\"address\"> Address </option>\r\n            <option value=\"transaction\"> Transaction </option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleClick}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchContents: state.searchContents\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {searchAddress, searchTransaction})(Search);\r\n"]},"metadata":{},"sourceType":"module"}