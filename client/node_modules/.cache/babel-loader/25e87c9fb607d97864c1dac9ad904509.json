{"ast":null,"code":"import _defineProperty from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\src\\\\components\\\\Payment.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Table, Row, Form, Button } from 'react-bootstrap';\nimport { pay } from './../redux/actions/actions';\n\nvar Payment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payment, _Component);\n\n  function Payment(props) {\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payment).call(this, props));\n\n    _this.handlePayerAddressInput = function (e) {\n      _this.setState({\n        payerAddressInput: e.target.value\n      });\n    };\n\n    _this.handlePayeeAddressInput = function (e) {\n      _this.setState({\n        payeeAddressInput: e.target.value\n      });\n    };\n\n    _this.handlePayerPublicKeyInput = function (e) {\n      _this.setState({\n        payerPublicKeyInput: e.target.value\n      });\n    };\n\n    _this.handlePayerPrivateKeyInput = function (e) {\n      _this.setState({\n        payerPrivateKeyInput: e.target.value\n      });\n    };\n\n    _this.handlePayingAmountInput = function (e) {\n      _this.setState({\n        payingAmountInput: e.target.value\n      });\n    };\n\n    _this.state = {\n      payerAddressInput: _this.props.payer.address,\n      payeeAddressInput: \"\",\n      payerPublicKeyInput: _this.props.payer.publicKey,\n      payerPrivateKeyInput: _this.props.payer.privateKey,\n      payingAmountInput: \"\"\n    };\n    _this.payerAddressInput = React.createRef();\n    _this.payeeAddressInput = React.createRef();\n    _this.payerPublicKeyInput = React.createRef();\n    _this.payerPrivateKeyInput = React.createRef();\n    _this.payingAmountInput = React.createRef();\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  } // validate the form of inputs\n\n\n  _createClass(Payment, [{\n    key: \"validate\",\n    value: function validate() {\n      return {\n        payerAddressInput: /^[A-Za-z0-9]+$/.test(this.state.payerAddressInput) && this.state.payerAddressInput.length >= 26 && this.state.payerAddressInput.length <= 35,\n        payeeAddressInput: /^[A-Za-z0-9]+$/.test(this.state.payeeAddressInput) && this.state.payeeAddressInput.length >= 26 && this.state.payeeAddressInput.length <= 35,\n        payerPublicKeyInput: /^[a-f0-9]+$/.test(this.state.payerPublicKeyInput) && this.state.payerPublicKeyInput.length === 66,\n        payerPrivateKeyInput: /^[A-Za-z0-9]+$/.test(this.state.payerPrivateKeyInput) && this.state.payerPrivateKeyInput.length === 52,\n        payingAmountInput: /^[0-9]+$/.test(this.state.payingAmountInput)\n      };\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      e.preventDefault();\n      this.props.pay(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var validation = this.validate();\n      var isDisabled = false;\n      Object.keys(validation).forEach(function (key) {\n        if (!validation[key]) {\n          isDisabled = true;\n        }\n      });\n      return React.createElement(Container, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Make a payment now.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formPayerWalletAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Payer Wallet Address\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.payerAddressInput,\n        name: \"payerAddressInput\",\n        isInvalid: !validation.payerAddressInput,\n        placeholder: \"Enter your wallet address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"A valid address length must be in the range of 26 and 35.\")), React.createElement(Form.Group, {\n        controlId: \"formPayerWalletPublicKey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Payer Public Key\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.payerPublicKeyInput,\n        name: \"payerPublicKeyInput\",\n        onChange: this.handleChange,\n        isInvalid: !validation.payerPublicKeyInput,\n        placeholder: \"Enter your wallet public key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"The length of a valid public key must be 66.\")), React.createElement(Form.Group, {\n        controlId: \"formPayerWalletPrivateKey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Payer Private Key(WIF)\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.payerPrivateKeyInput,\n        name: \"payerPrivateKeyInput\",\n        isInvalid: !validation.payerPrivateKeyInput,\n        placeholder: \"Enter your wallet private key in Base58 Wallet Import Format\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"The length of a valid private key (WIF) must be 52.\")), React.createElement(Form.Group, {\n        controlId: \"formPayeeWalletAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Payer Wallet Address\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.payeeAddressInput,\n        name: \"payeeAddressInput\",\n        isInvalid: !validation.payeeAddressInput,\n        placeholder: \"Enter payee wallet address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"A valid address length must be in the range of 26 and 35.\")), React.createElement(Form.Group, {\n        controlId: \"formPayingAmountInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Paying Amount\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.payingAmountInput,\n        name: \"payingAmountInput\",\n        isInvalid: !validation.payingAmountInput,\n        placeholder: \"Enter paying amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"The paying amount must be a positive number.\")), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: isDisabled,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Create\")));\n    }\n  }]);\n\n  return Payment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    payer: state.auth.user.payer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  pay: pay\n})(Payment);","map":{"version":3,"sources":["D:\\Projects\\playground\\playground-bitcoin-blockcrypher\\client\\src\\components\\Payment.js"],"names":["React","Component","connect","Container","Table","Row","Form","Button","pay","Payment","props","handlePayerAddressInput","e","setState","payerAddressInput","target","value","handlePayeeAddressInput","payeeAddressInput","handlePayerPublicKeyInput","payerPublicKeyInput","handlePayerPrivateKeyInput","payerPrivateKeyInput","handlePayingAmountInput","payingAmountInput","state","payer","address","publicKey","privateKey","createRef","handleClick","bind","handleChange","name","test","length","preventDefault","validation","validate","isDisabled","Object","keys","forEach","key","mapStateToProps","auth","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Table, Row, Form, Button } from 'react-bootstrap';\r\n\r\nimport {\r\n  pay\r\n} from './../redux/actions/actions';\r\n\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      payerAddressInput: this.props.payer.address,\r\n      payeeAddressInput: \"\",\r\n      payerPublicKeyInput: this.props.payer.publicKey,\r\n      payerPrivateKeyInput: this.props.payer.privateKey,\r\n      payingAmountInput: \"\"\r\n    };\r\n    this.payerAddressInput = React.createRef();\r\n    this.payeeAddressInput = React.createRef();\r\n    this.payerPublicKeyInput = React.createRef();\r\n    this.payerPrivateKeyInput = React.createRef();\r\n    this.payingAmountInput = React.createRef();\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = (e) => {\r\n          this.setState(\r\n              {\r\n                  [e.target.name]: e.target.value\r\n              }\r\n          );\r\n    };\r\n  }\r\n\r\n  // validate the form of inputs\r\n  validate() {\r\n    return {\r\n      payerAddressInput: /^[A-Za-z0-9]+$/.test(this.state.payerAddressInput) && this.state.payerAddressInput.length >= 26 && this.state.payerAddressInput.length <= 35,\r\n      payeeAddressInput: /^[A-Za-z0-9]+$/.test(this.state.payeeAddressInput) && this.state.payeeAddressInput.length >= 26 && this.state.payeeAddressInput.length <= 35,\r\n      payerPublicKeyInput: /^[a-f0-9]+$/.test(this.state.payerPublicKeyInput) && this.state.payerPublicKeyInput.length === 66,\r\n      payerPrivateKeyInput: /^[A-Za-z0-9]+$/.test(this.state.payerPrivateKeyInput) && this.state.payerPrivateKeyInput.length === 52,\r\n      payingAmountInput: /^[0-9]+$/.test(this.state.payingAmountInput)\r\n    };\r\n  }\r\n\r\n  handlePayerAddressInput = e => {\r\n    this.setState({ payerAddressInput: e.target.value });\r\n  };\r\n\r\n  handlePayeeAddressInput = e => {\r\n    this.setState({ payeeAddressInput: e.target.value });\r\n  };\r\n\r\n  handlePayerPublicKeyInput = e => {\r\n    this.setState({ payerPublicKeyInput: e.target.value });\r\n  };\r\n\r\n  handlePayerPrivateKeyInput = e => {\r\n    this.setState({ payerPrivateKeyInput: e.target.value });\r\n  };\r\n\r\n  handlePayingAmountInput = e => {\r\n    this.setState({ payingAmountInput: e.target.value });\r\n  };\r\n\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    this.props.pay(this.state);\r\n  }\r\n\r\n  render() {\r\n    const validation = this.validate();\r\n    let isDisabled = false;\r\n    Object.keys(validation).forEach(\r\n      (key) => {\r\n        if (!validation[key]){\r\n          isDisabled = true;\r\n        }\r\n      }\r\n    );\r\n\r\n    return (\r\n      <Container className=\"justify-content-md-center\">\r\n        <br/>\r\n        <Row className=\"justify-content-md-center\">\r\n          Make a payment now.\r\n        </Row>\r\n        <br/>\r\n               <Form>\r\n                <Form.Group controlId=\"formPayerWalletAddress\">\r\n                  <Form.Label>Payer Wallet Address</Form.Label>\r\n                  <Form.Control type=\"text\" value={this.state.payerAddressInput} name=\"payerAddressInput\" isInvalid={!validation.payerAddressInput} placeholder = \"Enter your wallet address\"/>\r\n                  <Form.Control.Feedback type=\"invalid\">A valid address length must be in the range of 26 and 35.</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPayerWalletPublicKey\">\r\n                  <Form.Label>Payer Public Key</Form.Label>\r\n                  <Form.Control type=\"text\" value={this.state.payerPublicKeyInput} name=\"payerPublicKeyInput\" onChange={this.handleChange} isInvalid={!validation.payerPublicKeyInput} placeholder = \"Enter your wallet public key\"/>\r\n                  <Form.Control.Feedback type=\"invalid\">The length of a valid public key must be 66.</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPayerWalletPrivateKey\">\r\n                  <Form.Label>Payer Private Key(WIF)</Form.Label>\r\n                  <Form.Control type=\"text\" value={this.state.payerPrivateKeyInput} name=\"payerPrivateKeyInput\" isInvalid={!validation.payerPrivateKeyInput} placeholder = \"Enter your wallet private key in Base58 Wallet Import Format\"/>\r\n                  <Form.Control.Feedback type=\"invalid\">The length of a valid private key (WIF) must be 52.</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPayeeWalletAddress\">\r\n                  <Form.Label>Payer Wallet Address</Form.Label>\r\n                  <Form.Control type=\"text\" value={this.state.payeeAddressInput} name=\"payeeAddressInput\" isInvalid={!validation.payeeAddressInput} placeholder = \"Enter payee wallet address\"/>\r\n                  <Form.Control.Feedback type=\"invalid\">A valid address length must be in the range of 26 and 35.</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPayingAmountInput\">\r\n                  <Form.Label>Paying Amount</Form.Label>\r\n                  <Form.Control type=\"text\" value={this.state.payingAmountInput} name=\"payingAmountInput\" isInvalid={!validation.payingAmountInput} placeholder = \"Enter paying amount\"/>\r\n                  <Form.Control.Feedback type=\"invalid\">The paying amount must be a positive number.</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" disabled={isDisabled} onClick={this.handleClick}>\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    payer: state.auth.user.payer\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {pay})(Payment);\r\n"]},"metadata":{},"sourceType":"module"}