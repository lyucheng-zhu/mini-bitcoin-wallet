{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\playground\\\\playground-bitcoin-blockcrypher\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  address: {},\n  transaction: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOAD_ADDRESS_DETAIL':\n      var _address = {};\n      _address.address = action.addressDetail.address;\n      _address.balance = action.addressDetail.balance;\n      _address.transactions = [];\n      action.addressDetail.txrefs.map(function (txref) {\n        if (!_address.transactions.includes(txref.tx_hash)) _address.transactions.push(txref.tx_hash);\n      });\n      console.log(_address.transactions);\n      return _objectSpread({}, state, {\n        address: _address\n      });\n\n    case 'LOAD_TRANSACTION_DETAIL':\n      var _transaction = {};\n      _transaction.comfirmed = action.transactionDetail.confirmed;\n      _transaction.total = action.transactionDetail.total;\n      _transaction.fees = action.transactionDetail.fees;\n      _transaction.payers = action.transactionDetail.inputs.map(function (input) {\n        return {\n          address: input.addresses,\n          amount: input.output_value\n        };\n      });\n      _transaction.payees = action.transactionDetail.outputs.map(function (output) {\n        return {\n          address: output.addresses,\n          amount: output.value\n        };\n      });\n      return _objectSpread({}, state, {\n        transaction: _transaction\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:\\Projects\\playground\\playground-bitcoin-blockcrypher\\client\\src\\redux\\reducers\\search.js"],"names":["initialState","address","transaction","state","action","type","_address","addressDetail","balance","transactions","txrefs","map","txref","includes","tx_hash","push","console","log","_transaction","comfirmed","transactionDetail","confirmed","total","fees","payers","inputs","input","addresses","amount","output_value","payees","outputs","output","value"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,qBAAL;AACE,UAAIC,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,CAACL,OAAT,GAAmBG,MAAM,CAACG,aAAP,CAAqBN,OAAxC;AACAK,MAAAA,QAAQ,CAACE,OAAT,GAAmBJ,MAAM,CAACG,aAAP,CAAqBC,OAAxC;AACAF,MAAAA,QAAQ,CAACG,YAAT,GAAwB,EAAxB;AACAL,MAAAA,MAAM,CAACG,aAAP,CAAqBG,MAArB,CAA4BC,GAA5B,CAAgC,UAACC,KAAD,EAAW;AACzC,YAAG,CAAEN,QAAQ,CAACG,YAAT,CAAsBI,QAAtB,CAA+BD,KAAK,CAACE,OAArC,CAAL,EACER,QAAQ,CAACG,YAAT,CAAsBM,IAAtB,CAA2BH,KAAK,CAACE,OAAjC;AACH,OAHD;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACG,YAArB;AACA,+BACKN,KADL;AAEEF,QAAAA,OAAO,EAAEK;AAFX;;AAIF,SAAK,yBAAL;AACE,UAAIY,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,SAAb,GAAyBf,MAAM,CAACgB,iBAAP,CAAyBC,SAAlD;AACAH,MAAAA,YAAY,CAACI,KAAb,GAAqBlB,MAAM,CAACgB,iBAAP,CAAyBE,KAA9C;AACAJ,MAAAA,YAAY,CAACK,IAAb,GAAoBnB,MAAM,CAACgB,iBAAP,CAAyBG,IAA7C;AACAL,MAAAA,YAAY,CAACM,MAAb,GAAsBpB,MAAM,CAACgB,iBAAP,CAAyBK,MAAzB,CAAgCd,GAAhC,CAAoC,UAACe,KAAD,EAAW;AACnE,eAAO;AACLzB,UAAAA,OAAO,EAAEyB,KAAK,CAACC,SADV;AAELC,UAAAA,MAAM,EAAEF,KAAK,CAACG;AAFT,SAAP;AAID,OALqB,CAAtB;AAMAX,MAAAA,YAAY,CAACY,MAAb,GAAsB1B,MAAM,CAACgB,iBAAP,CAAyBW,OAAzB,CAAiCpB,GAAjC,CAAqC,UAACqB,MAAD,EAAY;AACrE,eAAO;AACL/B,UAAAA,OAAO,EAAE+B,MAAM,CAACL,SADX;AAELC,UAAAA,MAAM,EAAEI,MAAM,CAACC;AAFV,SAAP;AAID,OALqB,CAAtB;AAMA,+BACK9B,KADL;AAEED,QAAAA,WAAW,EAAEgB;AAFf;;AAIF;AACI,aAAOf,KAAP;AArCR;AAuCH,CAxCD","sourcesContent":["const initialState = {\r\n    address: {},\r\n    transaction: {}\r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_ADDRESS_DETAIL' :\r\n          let _address = {};\r\n          _address.address = action.addressDetail.address;\r\n          _address.balance = action.addressDetail.balance;\r\n          _address.transactions = [];\r\n          action.addressDetail.txrefs.map((txref) => {\r\n            if(! _address.transactions.includes(txref.tx_hash))\r\n              _address.transactions.push(txref.tx_hash);\r\n          });\r\n          console.log(_address.transactions);\r\n          return {\r\n            ...state,\r\n            address: _address\r\n          }\r\n        case 'LOAD_TRANSACTION_DETAIL' :\r\n          let _transaction = {};\r\n          _transaction.comfirmed = action.transactionDetail.confirmed;\r\n          _transaction.total = action.transactionDetail.total;\r\n          _transaction.fees = action.transactionDetail.fees;\r\n          _transaction.payers = action.transactionDetail.inputs.map((input) => {\r\n            return {\r\n              address: input.addresses,\r\n              amount: input.output_value\r\n            };\r\n          });\r\n          _transaction.payees = action.transactionDetail.outputs.map((output) => {\r\n            return {\r\n              address: output.addresses,\r\n              amount: output.value\r\n            };\r\n          });\r\n          return {\r\n            ...state,\r\n            transaction: _transaction\r\n          }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}